<?xml version="1.0" encoding="UTF-8"?>

<!-- 마이바티스 3 Mapper DTD -->
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="diary.dao.face.DiaryDao">

	<select id="selectCntMember" resultType="int" parameterType="member.dto.Member">
		SELECT count(*) cnt FROM member
		WHERE user_id = #{userId} AND user_pw = #{userPw}
	</select>
	
	<select id="selectMember" resultType="member.dto.Member" parameterType="member.dto.Member">
		SELECT * FROM member
		WHERE user_id = #{userId} AND user_pw = #{userPw}
	</select>
	
	<select id="selectRoomList" resultType="room.dto.RoomList" parameterType="int">
		SELECT * FROM room_list
		WHERE user_no = #{userNo}
		ORDER BY room_list_no
	</select>

	<select id="selectRoom" resultType="room.dto.Room" parameterType="hashmap">
		SELECT * FROM room
			<foreach collection="roomNoArr" item="roomNo" open="WHERE" separator="OR">
				room_no = #{roomNo}
			</foreach>
		ORDER BY room_no
	</select>
	
	<update id="deleteFavorite" parameterType="int">
		DELETE from diary_favorite
		WHERE user_no = #{userNo}
	</update>
	
	<insert id="insertFavorite" parameterType="diary.dto.DiaryFavorite">
		INSERT ALL
			<foreach collection="list" item="item">
				INTO diary_favorite VALUES (#{item.roomNo}, #{item.userNo}, (select room_name from room where room_no = #{item.roomNo}))
			</foreach>
		SELECT * FROM dual
	</insert>
	
	<select id="selectFavorite" resultType="diary.dto.DiaryFavorite" parameterType="int">
		SELECT * FROM diary_favorite
		WHERE user_no = #{userNo}
	</select>
	
	<select id="selectDiaryNotice" resultType="diary.dto.Diary" parameterType="room.dto.Room">
		SELECT d.*, m.user_name, r.room_name, c.diary_cate_name, h.diary_hot
		FROM diary d left outer join member m ON d.user_no = m.user_no
		LEFT OUTER JOIN room r ON d.room_no = r.room_no
		LEFT OUTER JOIN diary_category c ON d.diary_cate_no = c.diary_cate_no
		LEFT OUTER JOIN diary_hot h ON d.room_no = h.room_no
		WHERE diary_cate_name = '공지사항' AND (
		<foreach collection="list" item="item" separator="OR">
				d.room_no = #{item.roomNo}
		</foreach>
		) ORDER BY d.diary_date
	</select>
	
	<select id="selectDiaryRecomm" resultType="diary.dto.Diary" parameterType="room.dto.Room">
		SELECT d.*, m.user_name, r.room_name, c.diary_cate_name, h.diary_hot
		FROM diary d left outer join member m ON d.user_no = m.user_no
		LEFT OUTER JOIN room r ON d.room_no = r.room_no
		LEFT OUTER JOIN diary_category c ON d.diary_cate_no = c.diary_cate_no
		LEFT OUTER JOIN diary_hot h ON d.room_no = h.room_no
		WHERE diary_cate_name != '공지사항' AND (
		<foreach collection="list" item="item" separator="OR">
				d.room_no = #{item.roomNo}
		</foreach>
		) AND d.diary_recommend >= h.diary_hot ORDER BY d.diary_date
	</select>
	
	<select id="selectDiaryCurrent" resultType="diary.dto.Diary" parameterType="room.dto.Room">
		SELECT d.*, m.user_name, r.room_name, c.diary_cate_name, h.diary_hot
		FROM diary d left outer join member m ON d.user_no = m.user_no
		LEFT OUTER JOIN room r ON d.room_no = r.room_no
		LEFT OUTER JOIN diary_category c ON d.diary_cate_no = c.diary_cate_no
		LEFT OUTER JOIN diary_hot h ON d.room_no = h.room_no
		WHERE diary_cate_name != '공지사항' AND (
		<foreach collection="list" item="item" separator="OR">
				d.room_no = #{item.roomNo}
		</foreach>
		) ORDER BY d.diary_date
	</select>
	
	<select id="selectAdminRoom" resultType="room.dto.Room" parameterType="int">
		SELECT * FROM room
		WHERE user_no = #{userNo}
		ORDER BY room_no
	</select>
	
	<select id="selectRoomName" resultType="room.dto.Room" parameterType="int">
		SELECT * FROM room
		WHERE room_no = #{roomNo}
	</select>
	
	<select id="selectHotvalue" resultType="diary.dto.DiaryHot" parameterType="int">
		SELECT * FROM diary_hot
		WHERE room_no = #{roomNo}
	</select>
	
	<select id="selectHot" resultType="int" parameterType="int">
		SELECT count(*) FROM diary_hot
		WHERE room_no = #{roomNo}
	</select>
	
	<insert id="insertHot" parameterType="diary.dto.DiaryHot">
		INSERT INTO diary_hot
		values (#{roomNo}, #{diaryHot})
	</insert>
	
	<update id="updateHot" parameterType="diary.dto.DiaryHot">
		UPDATE diary_hot SET diary_hot = #{diaryHot}
		WHERE room_no = #{roomNo}
	</update>
	
	<select id="selectDiaryCategory" resultType="diary.dto.DiaryCategory" parameterType="int">
		SELECT * FROM diary_category
		WHERE room_no = #{roomNo}
	</select>

</mapper>